version: '3.8'
services:
  grades_db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: GradeDb
    healthcheck:
          test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d GradeDb'"]
          interval: 10s
          timeout: 3s
          retries: 55
    
  grades_backend:
    container_name: ${DOCKER_REGISTRY-}grades_backend
    image: grades_backend
    privileged: true
    ports:
      - 5000:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=UserID=postgres;Password=postgres;Server=grades_db;Port=5432;Database=GradeDb;Integrated Security=true;Pooling=true;",

    build: 
      context: .
      dockerfile: ./API/Dockerfile
    depends_on:
      grades_db:
        condition: service_healthy
        
  grades_web:
    image: ${DOCKER_REGISTRY-}grades_web
    container_name: grades_web
    volumes:
    - /Client:/Client
    ports: 
      - 8080:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

    build: 
       context: .
       dockerfile: ./Client/Dockerfile
    depends_on: 
      - grades_backend